<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemyL</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variable

dir = -1;
movespeed = 0;
grav = 0.2;
hsp = 0;
vsp = 0;
fearofheights = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = dir * movespeed;
vsp += grav;


//Horizontal Collision
if (place_meeting(x+hsp,y,obj_caveblock1))
{
    while(!place_meeting(x+sign(hsp),y,obj_caveblock1))
    {
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1;
}
else if (place_meeting(x+hsp,y,obj_tutorblock1))
{
    while(!place_meeting(x+sign(hsp),y,obj_tutorblock1))
    {
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1;
}
else if (place_meeting(x+hsp,y,obj_caveblock2))
{
    while(!place_meeting(x+sign(hsp),y,obj_caveblock2))
    {
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1;
}
else if (place_meeting(x+hsp,y,obj_enemy))
{
    while(!place_meeting(x+sign(hsp),y,obj_enemy))
    {
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1;
}
else if (place_meeting(x+hsp,y,obj_grassblock1))
{
    while(!place_meeting(x+sign(hsp),y,obj_grassblock1))
    {
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1;
}
else if (place_meeting(x+hsp,y,obj_grassblock2))
{
    while(!place_meeting(x+sign(hsp),y,obj_grassblock2))
    {
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1;
}
else if (place_meeting(x+hsp,y,obj_grassblock3))
{
    while(!place_meeting(x+sign(hsp),y,obj_grassblock3))
    {
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_caveblock1))
{
    while(!place_meeting(x,y+sign(vsp),obj_caveblock1))
    {
        y += sign(vsp);
    }
    vsp = 0;
    if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+8, obj_caveblock1)
    {
    dir *= -1;
    }
}
else if (place_meeting(x,y+vsp,obj_tutorblock1))
{
    instance_destroy();
}
else if (place_meeting(x,y+vsp,obj_caveblock2))
{
    while(!place_meeting(x,y+sign(vsp),obj_caveblock2))
    {
        y += sign(vsp);
    }    
    vsp = 0;
    if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+8, obj_caveblock2)
    {
    dir *= -1;
    }
}
else if (place_meeting(x,y+vsp,obj_grassblock1))
{
    while(!place_meeting(x,y+sign(vsp),obj_grassblock1))
    {
        y += sign(vsp);
    }    
    vsp = 0;
    if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+8, obj_grassblock1)
    {
    dir *= -1;
    }
}
else if (place_meeting(x,y+vsp,obj_grassblock2))
{
    while(!place_meeting(x,y+sign(vsp),obj_grassblock2))
    {
        y += sign(vsp);
    }    
    vsp = 0;
    if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+8, obj_grassblock2)
    {
    dir *= -1;
    }
}
else if (place_meeting(x,y+vsp,obj_grassblock3))
{
    while(!place_meeting(x,y+sign(vsp),obj_grassblock3))
    {
        y += sign(vsp);
    }    
    vsp = 0;
    if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+8, obj_grassblock3)
    {
    dir *= -1;
    }
}
y += vsp;

//Enemy Collision
if (place_meeting(x,y,obj_player))
{
    if (obj_player.y &lt; y-16)
    {
        with (obj_player) vsp = -jumpspeed;
        instance_destroy();
    }
    else
    {
        scr_death();
    }
}



//sprite change w/ direction
if(dir = -1)
    sprite_index = spr_enemyL;
else if (dir = 1)
    sprite_index = spr_enemyR;
else {
    if sprite_index == spr_enemyL
        sprite_index = spr_enemyL;
    else if sprite_index == spr_enemyR
        sprite_index = spr_enemyR;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
