<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerR</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 0;
vsp = 0;
movespeed = 4;


jumpspeed_normal = 7;
jumpspeed_pup = 10;

jumpspeed = jumpspeed_normal;

if (global.checkpointR == room)
{
    x = global.checkpointx;
    y = global.checkpointy;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumpspeed = jumpspeed_normal;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);

//React to inputs

var moves = keyboard_check(vk_right) - keyboard_check(vk_left);

if moves = -1
    sprite_index = spr_playerL;
else if moves = 1
    sprite_index = spr_playerR;       
else {
    if sprite_index == spr_playerL
        sprite_index = spr_playerL;
    else if sprite_index == spr_playerR
        sprite_index = spr_playerR;
}

move = key_right + key_left;
hsp = move * movespeed;
if(vsp &lt; 10) vsp += grav;

//blocks with collisions 
if (place_meeting(x,y+1,obj_caveblock1))
{
    vsp = key_jump * -jumpspeed;
}
else if (place_meeting(x,y+1,obj_tutorblock1))
{
     vsp = key_jump * -jumpspeed;
}
else if (place_meeting(x,y+1,obj_caveblock2))
{
    vsp = key_jump * -jumpspeed;
}
else if (place_meeting(x,y+1,obj_grassblock1))
{
    vsp = key_jump * -jumpspeed;
}
else if (place_meeting(x,y+1,obj_grassblock2))
{
    vsp = key_jump * -jumpspeed;
}
else if (place_meeting(x,y+1,obj_grassblock3))
{
    vsp = key_jump * -jumpspeed;
}
else if (place_meeting(x,y+1,obj_secretblock_activation_grass))
{
    vsp = key_jump * -jumpspeed;
}


//Horizontal Collision
if (place_meeting(x+hsp,y,obj_caveblock1))
{
    while(!place_meeting(x+sign(hsp),y,obj_caveblock1))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
else if (place_meeting(x+hsp,y,obj_tutorblock1))
{
    while(!place_meeting(x+sign(hsp),y,obj_tutorblock1))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
else if (place_meeting(x+hsp,y,obj_caveblock2))
{
    while(!place_meeting(x+sign(hsp),y,obj_caveblock2))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
else if (place_meeting(x+hsp,y,obj_grassblock1))
{
    while(!place_meeting(x+sign(hsp),y,obj_grassblock1))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
else if (place_meeting(x+hsp,y,obj_grassblock2))
{
    while(!place_meeting(x+sign(hsp),y,obj_grassblock2))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
else if (place_meeting(x+hsp,y,obj_grassblock3))
{
    while(!place_meeting(x+sign(hsp),y,obj_grassblock3))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
else if (place_meeting(x+hsp,y,obj_secretblock_activation_grass))
{
    while(!place_meeting(x+sign(hsp),y,obj_secretblock_activation_grass))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_caveblock1))
{
    while(!place_meeting(x,y+sign(vsp),obj_caveblock1))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
else if (place_meeting(x,y+vsp,obj_tutorblock1))
{
    while(!place_meeting(x,y+sign(vsp),obj_tutorblock1))
    {
        y += sign(vsp);
    }
    
    vsp = 0;
}
else if (place_meeting(x,y+vsp,obj_caveblock2))
{
    while(!place_meeting(x,y+sign(vsp),obj_caveblock2))
    {
        y += sign(vsp);
    }
    
    vsp = 0;
}
else if (place_meeting(x,y+vsp,obj_grassblock1))
{
    while(!place_meeting(x,y+sign(vsp),obj_grassblock1))
    {
        y += sign(vsp);
    }
    
    vsp = 0;
}
else if (place_meeting(x,y+vsp,obj_grassblock2))
{
    while(!place_meeting(x,y+sign(vsp),obj_grassblock2))
    {
        y += sign(vsp);
    }
    
    vsp = 0;
}
else if (place_meeting(x,y+vsp,obj_grassblock3))
{
    while(!place_meeting(x,y+sign(vsp),obj_grassblock3))
    {
        y += sign(vsp);
    }
    
    vsp = 0;
}
else if (place_meeting(x,y+vsp,obj_secretblock_activation_grass))
{
    while(!place_meeting(x,y+sign(vsp),obj_secretblock_activation_grass))
    {
        y += sign(vsp);
    }
    
    vsp = 0;
    with(obj_secretblock_delete_grass)
    instance_destroy();
}
y += vsp;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
